---

###################
### Custom Repo ###
###################
- name: Determine upstream Ubuntu codename for PPAs
  ansible.builtin.set_fact:
    upstream_codename: >-
      {{ upstream_codename_map[
           (
             ansible_facts['distribution']
               | lower
               | replace(' ', '_')
           ) ~ '_' ~
           ansible_facts.lsb.major_release
         ]
         | default(ansible_facts.lsb.codename) }}

- name: Cleanup any legacy underscore-named repo lists
  become: true
  ansible.builtin.file:
    path: "/etc/apt/sources.list.d/{{ item.id }}.list"
    state: absent
  loop: "{{ essential_programs.debian_repos }}"
  loop_control:
    label: "{{ item.id }}"

- name: Configure APT repositories in bulk
  ansible.builtin.include_tasks:
    file: add-debian-repo.yml
    apply:
      become: true
  loop: "{{ essential_programs.debian_repos }}"
  loop_control:
    label: "{{ item.id }}"
  vars:
    repo: "{{ item }}"

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 0
  become: true

- name: Install custom Debian repository packages
  ansible.builtin.apt:
    name: "{{ item.name }}"
    state: present
    install_recommends: true
  loop: "{{ essential_programs.debian_repos }}"
  loop_control:
    label: "{{ item.id }}"
  become: true

###################
##### Flatpak #####
###################
- name: Install Flatpak apps
  community.general.flatpak:
    name: "{{ essential_programs.flatpak }}"
    state: present
    remote: flathub
    method: system
  become: true

###################
# Common Programs #
###################
- name: Install common programs on Debian-based
  ansible.builtin.apt:
    name: "{{ essential_programs.common }}"
    state: present
    install_recommends: false
  become: true

#######################
## JetBrains Toolbox ##
#######################
# Source: https://github.com/nagygergo/jetbrains-toolbox-install
- name: Get latest JetBrains Toolbox download URL
  ansible.builtin.uri:
    url: "https://data.services.jetbrains.com/products/releases?code=TBA&latest=true&type=release"
    method: GET
    return_content: true
  register: jetbrains_api_response

- name: Extract download URL from API response
  ansible.builtin.set_fact:
    jetbrains_download_url: "{{ jetbrains_api_response.json.TBA[0].downloads.linux.link }}"

- name: Set JetBrains Toolbox paths
  ansible.builtin.set_fact:
    jetbrains_archive: "{{ jetbrains_download_url | basename }}"
    jetbrains_install_dir: "{{ ansible_env.HOME }}/.local/share/JetBrains/Toolbox/bin"
    jetbrains_symlink_dir: "{{ ansible_env.HOME }}/.local/bin"

- name: Download JetBrains Toolbox archive
  ansible.builtin.get_url:
    url: "{{ jetbrains_download_url }}"
    dest: "/tmp/{{ jetbrains_archive }}"
    mode: '0644'

- name: Create JetBrains Toolbox install directory
  ansible.builtin.file:
    path: "{{ jetbrains_install_dir }}"
    state: directory
    mode: '0755'

- name: Remove existing JetBrains Toolbox binary
  ansible.builtin.file:
    path: "{{ jetbrains_install_dir }}/jetbrains-toolbox"
    state: absent

- name: Extract JetBrains Toolbox archive
  ansible.builtin.unarchive:
    src: "/tmp/{{ jetbrains_archive }}"
    dest: "{{ jetbrains_install_dir }}"
    remote_src: true
    extra_opts:
      - "--strip-components=1"

- name: Remove downloaded archive
  ansible.builtin.file:
    path: "/tmp/{{ jetbrains_archive }}"
    state: absent

- name: Make JetBrains Toolbox executable
  ansible.builtin.file:
    path: "{{ jetbrains_install_dir }}/jetbrains-toolbox"
    mode: '0755'
    state: file

- name: Create symlink directory
  ansible.builtin.file:
    path: "{{ jetbrains_symlink_dir }}"
    state: directory
    mode: '0755'

- name: Remove existing symlink
  ansible.builtin.file:
    path: "{{ jetbrains_symlink_dir }}/jetbrains-toolbox"
    state: absent

- name: Create JetBrains Toolbox symlink
  ansible.builtin.file:
    src: "{{ jetbrains_install_dir }}/jetbrains-toolbox"
    dest: "{{ jetbrains_symlink_dir }}/jetbrains-toolbox"
    state: link
