---

###################
### Custom Repo ###
###################
# Repo: Google Chrome
- name: Remove old Google Chrome source list (se existir)
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/google-chrome.list
    state: absent
  become: true

- name: Download Google Chrome public key (ASCII-armored)
  ansible.builtin.get_url:
    url: "{{ essential_programs.debian_repos.custom.google_chrome.key_url }}"
    dest: "{{ essential_programs.debian_repos.custom.google_chrome.ascii_key }}"
    mode: '0644'
  become: true

- name: Convert Google Chrome key to binary format (dearmor)
  ansible.builtin.command:
    cmd: >
      gpg --batch --dearmor
      --yes
      --output {{ essential_programs.debian_repos.custom.google_chrome.keyring }}
      {{ essential_programs.debian_repos.custom.google_chrome.ascii_key }}
  args:
    creates: "{{ essential_programs.debian_repos.custom.google_chrome.keyring }}"
  become: true

- name: Remove temporary Google Chrome ASCII key file
  ansible.builtin.file:
    path: "{{ essential_programs.debian_repos.custom.google_chrome.ascii_key }}"
    state: absent
  become: true

- name: Add Google Chrome APT repository (signed-by keyring)
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch=amd64
           signed-by={{ essential_programs.debian_repos.custom.google_chrome.keyring }}]
      {{ essential_programs.debian_repos.custom.google_chrome.repo }}
    filename: google-chrome
    state: present
    update_cache: false
  become: true

# Repo: Spotify
- name: Remove old Spotify source list (se existir)
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/spotify.list
    state: absent
  become: true

- name: Download Spotify public key (ASCII-armored)
  ansible.builtin.get_url:
    url: "{{ essential_programs.debian_repos.custom.spotify.key_url }}"
    dest: "{{ essential_programs.debian_repos.custom.spotify.ascii_key }}"
    mode: '0644'
  become: true

- name: Convert Spotify key to binary format (dearmor)
  ansible.builtin.command:
    cmd: >
      gpg --batch --dearmor
      --yes
      --output {{ essential_programs.debian_repos.custom.spotify.keyring }}
      {{ essential_programs.debian_repos.custom.spotify.ascii_key }}
  args:
    creates: "{{ essential_programs.debian_repos.custom.spotify.keyring }}"
  become: true

- name: Remove temporary Spotify ASCII key file
  ansible.builtin.file:
    path: "{{ essential_programs.debian_repos.custom.spotify.ascii_key }}"
    state: absent
  become: true

- name: Add Spotify APT repository (signed-by keyring)
  ansible.builtin.apt_repository:
    repo: >-
      deb [signed-by={{ essential_programs.debian_repos.custom.spotify.keyring }}]
      {{ essential_programs.debian_repos.custom.spotify.repo }}
    filename: spotify
    state: present
    update_cache: false
  become: true

# PPA Repos
- name: Determine upstream Ubuntu codename for PPAs
  ansible.builtin.set_fact:
    upstream_codename: >-
      {{ upstream_codename_map[
           (
             ansible_facts['distribution']
               | lower
               | replace(' ', '_')
           ) ~ '_' ~
           ansible_facts.lsb.major_release
         ]
         | default(ansible_facts.lsb.codename) }}

# qBittorrent stable PPA
- name: Download qBittorrent PPA public key (ASCII-armored)
  ansible.builtin.get_url:
    url: "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x401E8827DA4E93E44C7D01E6D35164147CA69FC4"
    dest: /usr/share/keyrings/qbittorrent-team-archive-keyring.asc
    mode: '0644'
  become: true

- name: Convert qbittorrent PPA key to binary format
  ansible.builtin.command:
    cmd: >
      gpg --batch --dearmor
      --yes
      --output /usr/share/keyrings/qbittorrent-team-archive-keyring.gpg
      /usr/share/keyrings/qbittorrent-team-archive-keyring.asc
  args:
    creates: /usr/share/keyrings/qbittorrent-team-archive-keyring.gpg
  become: true

- name: Remove temporary qbittorrent ASCII key file
  ansible.builtin.file:
    path: /usr/share/keyrings/qbittorrent-team-archive-keyring.asc
    state: absent
  become: true

- name: Add qbittorrent-team PPA repository (signed-by dedicated keyring)
  ansible.builtin.apt_repository:
    repo: >-
      deb [signed-by=/usr/share/keyrings/qbittorrent-team-archive-keyring.gpg]
      https://ppa.launchpadcontent.net/qbittorrent-team/qbittorrent-stable/ubuntu
      {{ upstream_codename }} main
    filename: qbittorrent-team-qbittorrent-stable
    state: present
    update_cache: false
  become: true

# solaar-unifying/stable PPA
- name: Download solaar-unifying PPA public key (ASCII-armored)
  ansible.builtin.get_url:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x643FF34AF9151DC814DD3A1B2303D595EE907473
    dest: /usr/share/keyrings/solaar-unifying-archive-keyring.asc
    mode: '0644'
  become: true

- name: Convert solaar PPA key to binary format
  ansible.builtin.command:
    cmd: >
      gpg --batch --dearmor
      --yes
      --output /usr/share/keyrings/solaar-unifying-archive-keyring.gpg
      /usr/share/keyrings/solaar-unifying-archive-keyring.asc
  args:
    creates: /usr/share/keyrings/solaar-unifying-archive-keyring.gpg
  become: true

- name: Remove temporary solaar ASCII key file
  ansible.builtin.file:
    path: /usr/share/keyrings/solaar-unifying-archive-keyring.asc
    state: absent
  become: true

- name: Add solaar-unifying PPA repository (signed-by dedicated keyring)
  ansible.builtin.apt_repository:
    repo: >-
      deb [signed-by=/usr/share/keyrings/solaar-unifying-archive-keyring.gpg]
      https://ppa.launchpadcontent.net/solaar-unifying/stable/ubuntu
      {{ upstream_codename }} main
    filename: solaar-unifying-stable
    state: present
    update_cache: false
  become: true

# Update
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 0
  become: true

###################
### Custom Apps ###
###################
- name: Install custom apps from debian repos
  ansible.builtin.apt:
    name: "{{ item.value.name }}"
    state: present
    install_recommends: true
  become: true
  loop: "{{ essential_programs.debian_repos.custom | dict2items }}"

###################
##### Flatpak #####
###################
- name: Install Flatpak apps
  community.general.flatpak:
    name: "{{ essential_programs.flatpak }}"
    state: present
    remote: flathub
    method: system
  become: true

###################
# Common Programs #
###################
- name: Install common programs on Debian-based
  ansible.builtin.apt:
    name: "{{ essential_programs.common }}"
    state: present
    install_recommends: false
  become: true
