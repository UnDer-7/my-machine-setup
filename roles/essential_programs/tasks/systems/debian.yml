---

###################
### Custom Repo ###
###################
# PPA Repos
- name: Determine upstream Ubuntu codename for PPAs
  ansible.builtin.set_fact:
    upstream_codename: >-
      {{ upstream_codename_map[
           (
             ansible_facts['distribution']
               | lower
               | replace(' ', '_')
           ) ~ '_' ~
           ansible_facts.lsb.major_release
         ]
         | default(ansible_facts.lsb.codename) }}

# Add repos
- name: Configure APT repositories in bulk
  become: true
  loop: "{{ essential_programs.debian_repos }}"
  loop_control:
    label: "{{ item.id }}"
  block:
    - name: Remove old source list for {{ item.id }}
      ansible.builtin.file:
        path: "/etc/apt/sources.list.d/{{ item.id }}.list"
        state: absent

    - name: Download public key for {{ item.id }}
      ansible.builtin.get_url:
        url: "{{ item.key_url }}"
        dest: "{{ item.ascii_key }}"
        mode: '0644'

    - name: Convert ASCII key to GPG keyring for {{ item.id }}
      ansible.builtin.command:
        cmd: >
          gpg --batch --dearmor --yes
          --output {{ item.keyring }}
          {{ item.ascii_key }}
      args:
        creates: "{{ item.keyring }}"

    - name: Remove ASCII key file for {{ item.id }}
      ansible.builtin.file:
        path: "{{ item.ascii_key }}"
        state: absent

    - name: Add APT repository for {{ item.id }}
      ansible.builtin.apt_repository:
        repo: >-
          deb [{{ item.arch is defined and ("arch=" ~ item.arch) or "" }}
               signed-by={{ item.keyring }}]
          {{ item.repo }}
          {{ item.codename | default("") }}
          {{ item.components }}
        filename: "{{ item.id }}"
        state: present
        update_cache: false

# Update
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 0
  become: true

# Install
- name: Install custom Debian repository packages
  ansible.builtin.apt:
    name: "{{ item.name }}"
    state: present
    install_recommends: true
  loop: "{{ essential_programs.debian_repos }}"
  loop_control:
    label: "{{ item.id }}"
  become: true

###################
##### Flatpak #####
###################
- name: Install Flatpak apps
  community.general.flatpak:
    name: "{{ essential_programs.flatpak }}"
    state: present
    remote: flathub
    method: system
  become: true

###################
# Common Programs #
###################
- name: Install common programs on Debian-based
  ansible.builtin.apt:
    name: "{{ essential_programs.common }}"
    state: present
    install_recommends: false
  become: true
