---

- name: Check if SDKMAN is already installed
  ansible.builtin.stat:
    path: "{{ sdkman.install_dir }}"
  register: sdkman_dir

- name: Install SDKMAN
  ansible.builtin.shell: |
    set -o pipefail
    curl -s "{{ sdkman.install_url }}" | bash
  args:
    executable: /bin/bash
  when: not sdkman_dir.stat.exists
  changed_when: "true"

- name: Verify SDKMAN installation
  ansible.builtin.shell: |
    set -o pipefail
    source "{{ sdkman.init_script }}" && sdk version
  args:
    executable: /bin/bash
  register: sdkman_version
  changed_when: "false"
  failed_when: sdkman_version.rc != 0

- name: Display SDKMAN version
  ansible.builtin.debug:
    msg: "SDKMAN installed successfully: {{ sdkman_version.stdout }}"
  when: sdkman_version.stdout is defined

- name: Set SDKMAN to non-interactive mode
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.sdkman/etc/config"
    regexp: '^sdkman_auto_answer='
    line: 'sdkman_auto_answer=true'
    backup: true

- name: Install Java via SDKMAN
  ansible.builtin.shell: |
    set -o pipefail
    source "{{ sdkman.init_script }}" && sdk install java
  args:
    executable: /bin/bash
  register: java_install
  changed_when: "'already installed' not in java_install.stdout"

- name: Install Maven via SDKMAN
  ansible.builtin.shell: |
    set -o pipefail
    source "{{ sdkman.init_script }}" && sdk install maven
  args:
    executable: /bin/bash
  register: maven_install
  changed_when: "'already installed' not in maven_install.stdout"

- name: Install Gradle via SDKMAN
  ansible.builtin.shell: |
    set -o pipefail
    source "{{ sdkman.init_script }}" && sdk install gradle
  args:
    executable: /bin/bash
  register: gradle_install
  changed_when: "'already installed' not in gradle_install.stdout"

- name: Restore SDKMAN to interactive mode
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.sdkman/etc/config"
    regexp: '^sdkman_auto_answer='
    line: 'sdkman_auto_answer=false'
